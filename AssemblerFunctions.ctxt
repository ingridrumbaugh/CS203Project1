#BlueJ class context
comment0.params=f\ s\ t
comment0.target=void\ setVariables(java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.params=f\ s\ imm
comment1.target=void\ setVariablesImm(java.lang.String,\ java.lang.String,\ int)
comment10.params=
comment10.target=void\ movz()
comment11.params=xd\ xs
comment11.target=void\ movz(java.lang.String,\ java.lang.String)
comment12.params=
comment12.target=void\ mul()
comment13.params=xd\ xn\ xm
comment13.target=void\ mul(java.lang.String,\ java.lang.String,\ java.lang.String)
comment14.params=
comment14.target=void\ ldur()
comment15.params=xd\ xn\ imm
comment15.target=void\ ldur(java.lang.String,\ java.lang.String,\ int)
comment16.params=
comment16.target=void\ stur()
comment17.params=xd\ xn\ imm
comment17.target=void\ stur(java.lang.String,\ java.lang.String,\ int)
comment18.params=
comment18.target=void\ lsl()
comment19.params=xd\ xn\ shift
comment19.target=void\ lsl(java.lang.String,\ java.lang.String,\ int)
comment2.params=
comment2.target=void\ add()
comment2.text=\r\n\ Used\ to\ test\ that\ a\ parsed\ argument\ in\ the\ readfiles\ class\ \r\n\ can\ directly\ call\ a\ function.\ \r\n
comment20.params=
comment20.target=void\ lsr()
comment21.params=xd\ xn\ shift
comment21.target=void\ lsr(java.lang.String,\ java.lang.String,\ int)
comment22.params=s
comment22.target=void\ binarytohex(Bit[])
comment23.params=
comment23.target=java.util.List\ finalHex()
comment24.params=opcode\ imm\ regn\ regd
comment24.target=void\ writeIFormat(java.lang.String,\ int,\ int,\ int)
comment25.params=opcode\ regm\ regn\ regd
comment25.target=void\ writeRFormat(java.lang.String,\ int,\ int,\ int)
comment26.params=opcode\ dtAdd\ regn\ regt
comment26.target=void\ writeDFormat(java.lang.String,\ int,\ int,\ int)
comment27.params=opcode\ movImm\ regd
comment27.target=void\ writeIWFormat(java.lang.String,\ int,\ int)
comment3.params=rdrt\ rn\ rf
comment3.target=void\ add(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Empty\ Function\ -\ \r\n\ To\ be\ called\ directly\ from\ the\ ReadFiles\ class\ instantiation.\ \r\n\ Will\ translate\ this\ instruction\ to\ binary.\ \r\n
comment4.params=
comment4.target=void\ addi()
comment4.text=\r\n\ Empty\ Function\ -\ \r\n\ To\ be\ called\ directly\ from\ the\ ReadFiles\ class\ instantiation.\ \r\n\ Will\ call\ the\ addi(int\ x1,\ int\ x2,\ Register\ r,\ int\ imm)\ function.\ \r\n
comment5.params=x1\ x2\ imm
comment5.target=void\ addi(java.lang.String,\ java.lang.String,\ int)
comment5.text=\r\n\ Empty\ Function\ -\ \ \r\n\ Will\ translate\ this\ instruction\ to\ binary.\ \r\n
comment6.params=
comment6.target=void\ sub()
comment6.text=\r\n\ Empty\ Function\ -\ \r\n\ To\ be\ called\ directly\ from\ the\ ReadFiles\ class\ instantiation.\ \r\n\ Will\ call\ the\ sub(int\ x1,\ int\ x2,\ Register\ r,\ int\ num)\ function.\ \r\n
comment7.params=xd\ xn\ xm
comment7.target=void\ sub(java.lang.String,\ java.lang.String,\ java.lang.String)
comment7.text=\r\n\ Empty\ Function\ -\ \r\n\ To\ be\ called\ directly\ from\ the\ ReadFiles\ class\ instantiation.\ \r\n\ Will\ translate\ this\ instruction\ to\ binary.\ \r\n
comment8.params=
comment8.target=void\ subi()
comment9.params=xd\ xn\ num
comment9.target=void\ subi(java.lang.String,\ java.lang.String,\ int)
numComments=28
